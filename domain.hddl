(define (domain transport)
  (:requirements :negative-preconditions :hierarchy :typing)
  (:types
        location vehicle - object
  )

  (:predicates 
     (road ?l1 ?l2 - location)
     (at ?v - vehicle ?l - location)
  )

  (:task get-to :parameters (?v - vehicle ?l - location))

  (:method m-drive-to
    :parameters (?v - vehicle ?l1 ?l2 - location)
    :task (get-to ?v ?l2)
    :subtasks (and
        (drive ?v ?l1 ?l2))
  )

  (:method m-drive-to-via
    :parameters (?v - vehicle ?l2 ?l3 - location)
    :task (get-to  ?v ?l3)
    :ordered-subtasks (and
        (get-to ?v ?l2)
        (drive ?v ?l2 ?l3))
  )

  (:method m-i-am-there
    :parameters (?v - vehicle ?l - location)
    :task (get-to  ?v ?l)
    :subtasks (and
        (noop ?v ?l))
  )
  
  (:action drive
    :parameters (?v - vehicle ?l1 ?l2 - location)
    :precondition (and
        (at ?v ?l1)
        (road ?l1 ?l2))
    :effect (and
        (not (at ?v ?l1))
        (at ?v ?l2))
  )

  (:action noop
    :parameters (?v - vehicle ?l2 - location)
    :precondition (at ?v ?l2)
    :effect ()
  )

)
